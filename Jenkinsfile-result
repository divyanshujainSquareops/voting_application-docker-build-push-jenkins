pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
    name: kaniko
spec:
    restartPolicy: Never
    volumes:
    - name: kaniko-secret
      secret:
            secretName: kaniko-secret
    containers:
    - name: kaniko
      image: gcr.io/kaniko-project/executor:debug
      command:
        - /busybox/cat
      tty: true
      volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
    - name: kaniko-2
      image: gcr.io/kaniko-project/executor:debug
      command:
        - /busybox/cat
      tty: true
      volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
    - name: kaniko-3
      image: gcr.io/kaniko-project/executor:debug
      command:
        - /busybox/cat
      tty: true
      volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
"""
        }
    }

    environment {
        DOCKER_HUB_REPO = 'divyanshujain11'
    }

    stages {
        stage('Clone in Kaniko Container') {
            steps {
                script {
                    container('kaniko') {
                        // git branch: 'main', credentialsId: 'github', url: 'https://github.com/divyanshujainSquareops/voting_application-docker-build-push-jenkins.git'
                        // echo "Repository cloned inside Kaniko container"
                       def BUILD_DATE = sh(script: 'date "+%Y %m %d"', returnStdout: true).trim()
                sh "echo \"commit= \\\"${JOB_NAME}-${BUILD_NUMBER}-${BUILD_DATE}\\\"\""
                    }
                }
            }
        }
        // stage('Build and Push result Images') {
        //     steps {
        //         script {
        //             container('kaniko') {
        //                 // Build and push Docker result image using Kaniko
        //                 sh "/kaniko/executor --dockerfile `pwd`/result/Dockerfile --context=`pwd` --destination=${DOCKER_HUB_REPO}/votingapp-result:${BUILD_NUMBER}"
        //                 echo "result Image build completed"
        //             }
        //         }
        //     }
        // }
        // stage('Helm Values Update and Push') {
        //   agent {
        //     kubernetes {
        //         yaml """
        //         apiVersion: v1
        //         kind: Pod
        //         metadata:
        //             name: builder
        //         spec:
        //           restartPolicy: Never
        //           volumes:
        //             - name: builder-storage
        //               emptyDir: {}
        //           containers:
        //           - name: builder
        //             image: squareops/jenkins-build-agent:v3
        //             securityContext:
        //               privileged: true
        //             volumeMounts:
        //               - name: builder-storage
        //                 mountPath: /var/lib/docker
        //         """
        //     }
        //   }
        //   steps {
        //     script {
        //         container('builder') {
        //             // Clone Git repo with credentials
        //             def BUILD_DATE = sh(script: 'date "+%Y%m%d%H%M%S"', returnStdout: true).trim()
        //             git branch: 'main', credentialsId: 'github', url: 'https://github.com/divyanshujainSquareops/voting_application-helm-argocd.git'
        //              withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'USER_NAME', passwordVariable: 'PASSWORD')]) {
        //                 sh '''
                            
        //                     echo 'Docker Image version Update "${JOB_NAME}"-"${BUILD_NUMBER}"-"${BUILD_DATE}"'
        //                 '''
        //             }
        //         }
        //     }
        //   }
        // }
    }
}
